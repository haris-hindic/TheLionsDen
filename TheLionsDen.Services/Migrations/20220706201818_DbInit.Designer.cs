// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheLionsDen.Services.Database;

#nullable disable

namespace TheLionsDen.Services.Migrations
{
    [DbContext(typeof(TheLionsDenContext))]
    [Migration("20220706201818_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TheLionsDen.Services.Database.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AmenityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenity", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int")
                        .HasColumnName("FacilityID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JobTypeID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("FacilityId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FacilityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("FacilityId");

                    b.ToTable("Facility", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Favourite", b =>
                {
                    b.Property<int>("FavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavouriteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavouriteId"), 1L, 1);

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("FavouriteId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourite", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.JobType", b =>
                {
                    b.Property<int>("JobTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("JobTypeId");

                    b.ToTable("JobType", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.PaymentDetail", b =>
                {
                    b.Property<int>("PaymentDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentDetailsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentDetailsId"), 1L, 1);

                    b.Property<string>("CardNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("Cvc")
                        .HasColumnType("int")
                        .HasColumnName("CVC");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("ExpDate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("PaymentDetailsId")
                        .HasName("PK_8");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime");

                    b.Property<string>("EstimatedArrivalTime")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("PaymentDetailsId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentDetailsID");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReservationId");

                    b.HasIndex("PaymentDetailsId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.ReservationFacilities", b =>
                {
                    b.Property<int>("ReservaitonFacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservaitonFacilityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaitonFacilityId"), 1L, 1);

                    b.Property<int>("FacilityId")
                        .HasColumnType("int")
                        .HasColumnName("FacilityID");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    b.HasKey("ReservaitonFacilityId")
                        .HasName("PK_13");

                    b.HasIndex("FacilityId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationFacilities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomAmenity", b =>
                {
                    b.Property<int>("RoomAmenitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomAmenitiesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomAmenitiesId"), 1L, 1);

                    b.Property<int>("AmenityId")
                        .HasColumnType("int")
                        .HasColumnName("AmenityID");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.HasKey("RoomAmenitiesId")
                        .HasName("PK_9");

                    b.HasIndex("AmenityId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomImage", b =>
                {
                    b.Property<int>("RoomImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomImageId"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    b.HasKey("RoomImageId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomImage", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Rules")
                        .HasColumnType("text");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Employee", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.Facility", "Facility")
                        .WithMany("Employees")
                        .HasForeignKey("FacilityId")
                        .HasConstraintName("FK_REFERENCE_13");

                    b.HasOne("TheLionsDen.Services.Database.JobType", "JobType")
                        .WithMany("Employees")
                        .HasForeignKey("JobTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_16");

                    b.Navigation("Facility");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Favourite", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.Room", "Room")
                        .WithMany("Favourites")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_8");

                    b.HasOne("TheLionsDen.Services.Database.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_7");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Reservation", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.PaymentDetail", "PaymentDetails")
                        .WithMany("Reservations")
                        .HasForeignKey("PaymentDetailsId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_15");

                    b.HasOne("TheLionsDen.Services.Database.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_10");

                    b.HasOne("TheLionsDen.Services.Database.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_9");

                    b.Navigation("PaymentDetails");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.ReservationFacilities", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.Facility", "Facility")
                        .WithMany("ReservationFacilities")
                        .HasForeignKey("FacilityId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_12");

                    b.HasOne("TheLionsDen.Services.Database.Reservation", "Reservation")
                        .WithMany("ReservationFacilities")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_11");

                    b.Navigation("Facility");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Room", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_4");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomAmenity", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.Amenity", "Amenity")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenityId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_5");

                    b.HasOne("TheLionsDen.Services.Database.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_6");

                    b.Navigation("Amenity");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomImage", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.RoomType", "RoomType")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_3");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.User", b =>
                {
                    b.HasOne("TheLionsDen.Services.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_14");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Amenity", b =>
                {
                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Facility", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("ReservationFacilities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.JobType", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.PaymentDetail", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Reservation", b =>
                {
                    b.Navigation("ReservationFacilities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.Room", b =>
                {
                    b.Navigation("Favourites");

                    b.Navigation("Reservations");

                    b.Navigation("RoomAmenities");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.RoomType", b =>
                {
                    b.Navigation("RoomImages");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TheLionsDen.Services.Database.User", b =>
                {
                    b.Navigation("Favourites");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
